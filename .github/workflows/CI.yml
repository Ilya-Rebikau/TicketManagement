name: .NET

on:
  push:
    branches: [ master, develop, Task-6 ]
  pull_request:
    branches: [ master, develop, Task-6 ]
env:
  DATA_ACCESS_PATH: 'src/TicketManagement.DataAccess'
  EVENT_MANAGER_API_PATH: 'src/TicketManagement.EventManagerAPI'
  PURCHASE_FLOW_API_PATH: 'src/TicketManagement.PurchaseFlowAPI'
  USER_API_PATH: 'src/TicketManagement.UserAPI'
  VENUE_MANAGER_API_PATH: 'src/TicketManagement.VenueManagerAPI'
  WEB_PATH: 'src/TicketManagement.Web'
  UNIT_TESTS_PATH: 'test/TicketManagement.UnitTests'
  INTEGRATION_TESTS_PATH: 'test/TicketManagement.IntegrationTests'
  CONTROLLERS_INTEGRATION_TESTS_PATH: 'test/TicketManagement.ControllersIntegrationTests'
  ARTIFACTS_DIRECTORY: "artifacts"
  EVENT_MANAGER_API_ARTIFACTS_DIRECTORY: "artifacts/TicketManagement.EventManagerAPI"
  PURCHASE_FLOW_API_ARTIFACTS_DIRECTORY: "artifacts/TicketManagement.PurchaseFlowAPI"
  USER_API_ARTIFACTS_DIRECTORY: "artifacts/TicketManagement.UserAPI"
  VENUE_MANAGER_API_ARTIFACTS_DIRECTORY: "artifacts/TicketManagement.VenueManagerAPI"
  WEB_ARTIFACTS_DIRECTORY: "artifacts/TicketManagement.Web"

jobs:
  Build:
    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 5.0.x

    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build TicketManagement.DataAccess
      run: dotnet build ${{ env.DATA_ACCESS_PATH }} --no-restore
    - name: Build TicketManagement.EventManagerAPI
      run: dotnet build ${{ env.EVENT_MANAGER_API_PATH }} --no-restore
    - name: Build TicketManagement.PurchaseFlowAPI
      run: dotnet build ${{ env.PURCHASE_FLOW_API_PATH }} --no-restore
    - name: Build TicketManagement.UserAPI
      run: dotnet build ${{ env.USER_API_PATH }} --no-restore
    - name: Build TicketManagement.VenueManagerAPI
      run: dotnet build ${{ env.VENUE_MANAGER_API_PATH }} --no-restore
    - name: Build TicketManagement.Web
      run: dotnet build ${{ env.WEB_PATH }} --no-restore
    - name: Build TicketManagement.UnitTests
      run: dotnet build ${{ env.UNIT_TESTS_PATH }} --no-restore
    - name: Build TicketManagement.IntegrationTests
      run: dotnet build ${{ env.INTEGRATION_TESTS_PATH }} --no-restore
    - name: Build TicketManagement.ControllersIntegrationTests
      run: dotnet build ${{ env.CONTROLLERS_INTEGRATION_TESTS_PATH }}
  Test:
    runs-on: self-hosted
    needs: Build
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 5.0.x
        
    - name: Run unit tests
      run: dotnet test ${{ env.UNIT_TESTS_PATH }} --no-restore --no-build
    - name: Run controllers intergration tests
      run: dotnet test ${{ env.INTEGRATION_TESTS_PATH }} --no-restore --no-build
    - name: Run controllers intergration tests
      run: dotnet test ${{ env.CONTROLLERS_INTEGRATION_TESTS_PATH }} --no-restore --no-build
      
  Publish:
    runs-on: self-hosted
    needs: Test
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 5.0.x
    
    - name: Install Octopus CLI
      uses: OctopusDeploy/install-octopus-cli-action@v1.2.0
      
    - name: Create artifacts folder
      run: |
        mkdir ${{ env.ARTIFACTS_DIRECTORY }}
        mkdir ${{ env.EVENT_MANAGER_API_ARTIFACTS_DIRECTORY }}
        mkdir ${{ env.PURCHASE_FLOW_API_ARTIFACTS_DIRECTORY }}
        mkdir ${{ env.USER_API_ARTIFACTS_DIRECTORY }}
        mkdir ${{ env.VENUE_MANAGER_API_ARTIFACTS_DIRECTORY }}
        mkdir ${{ env.WEB_ARTIFACTS_DIRECTORY }}
    
    - name: Publish TicketManagement.EventManagerAPI
      run: dotnet publish ${{ env.EVENT_MANAGER_API_PATH }} --output ${{ env.EVENT_MANAGER_API_ARTIFACTS_DIRECTORY }}
    - name: Publish TicketManagement.PurchaseFlowAPI
      run: dotnet publish ${{ env.PURCHASE_FLOW_API_PATH }} --output ${{ env.PURCHASE_FLOW_API_ARTIFACTS_DIRECTORY }}
    - name: Publish TicketManagement.UserAPI
      run: dotnet publish ${{ env.USER_API_PATH }} --output ${{ env.USER_API_ARTIFACTS_DIRECTORY }}
    - name: Publish TicketManagement.VenueManagerAPI
      run: dotnet publish ${{ env.VENUE_MANAGER_API_PATH }} --output ${{ env.VENUE_MANAGER_API_ARTIFACTS_DIRECTORY }}
    - name: Publish TicketManagement.Web
      run: dotnet publish ${{ env.WEB_PATH }} --output ${{ env.WEB_ARTIFACTS_DIRECTORY }}


    - name: Pack TicketManagement.EventManagerAPI
      run: octo pack --id=TicketManagement.EventManagerAPI --format=zip --version=1.${{ github.run_number }} --basePath=${{ env.EVENT_MANAGER_API_ARTIFACTS_DIRECTORY }} --outFolder=${{ env.ARTIFACTS_DIRECTORY }}
    - name: Pack TicketManagement.PurchaseFlowAPI
      run: octo pack --id=TicketManagement.PurchaseFlowAPI --format=zip --version=1.${{ github.run_number }} --basePath=${{ env.PURCHASE_FLOW_API_ARTIFACTS_DIRECTORY }} --outFolder=${{ env.ARTIFACTS_DIRECTORY }}
    - name: Pack TicketManagement.UserAPI
      run: octo pack --id=TicketManagement.UserAPI --format=zip --version=1.${{ github.run_number }} --basePath=${{ env.USER_API_ARTIFACTS_DIRECTORY }} --outFolder=${{ env.ARTIFACTS_DIRECTORY }}
    - name: Pack TicketManagement.VenueManagerAPI
      run: octo pack --id=TicketManagement.VenueManagerAPI --format=zip --version=1.${{ github.run_number }} --basePath=${{ env.VENUE_MANAGER_API_ARTIFACTS_DIRECTORY }} --outFolder=${{ env.ARTIFACTS_DIRECTORY }}
    - name: Pack TicketManagement.Web
      run: octo pack --id=TicketManagement.Web --format=zip --version=1.${{ github.run_number }} --basePath=${{ env.WEB_ARTIFACTS_DIRECTORY }} --outFolder=${{ env.ARTIFACTS_DIRECTORY }}
      
    - name: Push Packages to Octopus Deploy
      uses: OctopusDeploy/push-package-action@v1.1.2
      with:
        api_key: ${{ secrets.OCTOPUS_API_KEY }}
        overwrite_mode: "OverwriteExisting"
        packages: |
          ${{ env.ARTIFACTS_DIRECTORY }}/TicketManagement.EventManagerAPI.1.${{ github.run_number }}.zip
          ${{ env.ARTIFACTS_DIRECTORY }}/TicketManagement.PurchaseFlowAPI.1.${{ github.run_number }}.zip
          ${{ env.ARTIFACTS_DIRECTORY }}/TicketManagement.UserAPI.1.${{ github.run_number }}.zip
          ${{ env.ARTIFACTS_DIRECTORY }}/TicketManagement.VenueManagerAPI.1.${{ github.run_number }}.zip
          ${{ env.ARTIFACTS_DIRECTORY }}/TicketManagement.Web.1.${{ github.run_number }}.zip
        server: ${{ secrets.OCTOPUS_SERVER_URL }}
